/* global module */'use strict';// Including the packages.
var cov_pgq2zv7dw=function(){var path='/home/tarang/Node Task/social-cops-challenge/routes/protected.js',hash='717aa9716db09afff67cc8a8d6189ba321665476',global=new Function('return this')(),gcv='__coverage__',coverageData={path:'/home/tarang/Node Task/social-cops-challenge/routes/protected.js',statementMap:{'0':{start:{line:5,column:16},end:{line:5,column:34}},'1':{start:{line:6,column:10},end:{line:6,column:19}},'2':{start:{line:7,column:16},end:{line:7,column:32}},'3':{start:{line:8,column:18},end:{line:8,column:39}},'4':{start:{line:9,column:13},end:{line:9,column:28}},'5':{start:{line:12,column:21},end:{line:12,column:59}},'6':{start:{line:15,column:0},end:{line:15,column:27}},'7':{start:{line:16,column:0},end:{line:16,column:28}},'8':{start:{line:19,column:0},end:{line:21,column:3}},'9':{start:{line:20,column:2},end:{line:20,column:38}},'10':{start:{line:24,column:0},end:{line:40,column:3}},'11':{start:{line:25,column:16},end:{line:25,column:28}},'12':{start:{line:26,column:18},end:{line:26,column:32}},'13':{start:{line:28,column:2},end:{line:39,column:3}},'14':{start:{line:31,column:17},end:{line:31,column:48}},'15':{start:{line:32,column:4},end:{line:32,column:33}},'16':{start:{line:35,column:4},end:{line:38,column:7}},'17':{start:{line:43,column:0},end:{line:65,column:3}},'18':{start:{line:44,column:19},end:{line:44,column:36}},'19':{start:{line:45,column:2},end:{line:64,column:3}},'20':{start:{line:47,column:4},end:{line:58,column:7}},'21':{start:{line:48,column:6},end:{line:57,column:7}},'22':{start:{line:49,column:8},end:{line:52,column:11}},'23':{start:{line:54,column:8},end:{line:56,column:11}},'24':{start:{line:55,column:10},end:{line:55,column:53}},'25':{start:{line:60,column:4},end:{line:63,column:7}},'26':{start:{line:67,column:0},end:{line:67,column:21}}},fnMap:{'0':{name:'(anonymous_0)',decl:{start:{line:19,column:19},end:{line:19,column:20}},loc:{start:{line:19,column:33},end:{line:21,column:1}},line:19},'1':{name:'(anonymous_1)',decl:{start:{line:24,column:36},end:{line:24,column:37}},loc:{start:{line:24,column:50},end:{line:40,column:1}},line:24},'2':{name:'(anonymous_2)',decl:{start:{line:43,column:36},end:{line:43,column:37}},loc:{start:{line:43,column:50},end:{line:65,column:1}},line:43},'3':{name:'(anonymous_3)',decl:{start:{line:47,column:24},end:{line:47,column:25}},loc:{start:{line:47,column:40},end:{line:58,column:5}},line:47},'4':{name:'(anonymous_4)',decl:{start:{line:54,column:50},end:{line:54,column:51}},loc:{start:{line:54,column:66},end:{line:56,column:9}},line:54}},branchMap:{'0':{loc:{start:{line:28,column:2},end:{line:39,column:3}},type:'if',locations:[{start:{line:28,column:2},end:{line:39,column:3}},{start:{line:28,column:2},end:{line:39,column:3}}],line:28},'1':{loc:{start:{line:28,column:6},end:{line:28,column:22}},type:'binary-expr',locations:[{start:{line:28,column:6},end:{line:28,column:11}},{start:{line:28,column:15},end:{line:28,column:22}}],line:28},'2':{loc:{start:{line:45,column:2},end:{line:64,column:3}},type:'if',locations:[{start:{line:45,column:2},end:{line:64,column:3}},{start:{line:45,column:2},end:{line:64,column:3}}],line:45},'3':{loc:{start:{line:48,column:6},end:{line:57,column:7}},type:'if',locations:[{start:{line:48,column:6},end:{line:57,column:7}},{start:{line:48,column:6},end:{line:57,column:7}}],line:48},'4':{loc:{start:{line:48,column:10},end:{line:48,column:23}},type:'binary-expr',locations:[{start:{line:48,column:10},end:{line:48,column:13}},{start:{line:48,column:17},end:{line:48,column:23}}],line:48}},s:{'0':0,'1':0,'2':0,'3':0,'4':0,'5':0,'6':0,'7':0,'8':0,'9':0,'10':0,'11':0,'12':0,'13':0,'14':0,'15':0,'16':0,'17':0,'18':0,'19':0,'20':0,'21':0,'22':0,'23':0,'24':0,'25':0,'26':0},f:{'0':0,'1':0,'2':0,'3':0,'4':0},b:{'0':[0,0],'1':[0,0],'2':[0,0],'3':[0,0],'4':[0,0]},_coverageSchema:'332fd63041d2c1bcb487cc26dd0d5f7d97098a6c'},coverage=global[gcv]||(global[gcv]={});if(coverage[path]&&coverage[path].hash===hash){return coverage[path];}coverageData.hash=hash;return coverage[path]=coverageData;}();const express=(cov_pgq2zv7dw.s[0]++,require('express'));let app=(cov_pgq2zv7dw.s[1]++,express());let apiRoutes=(cov_pgq2zv7dw.s[2]++,express.Router());const jsonpatch=(cov_pgq2zv7dw.s[3]++,require('json-patch'));const Jimp=(cov_pgq2zv7dw.s[4]++,require('jimp'));// Including the local files
const authenticate=(cov_pgq2zv7dw.s[5]++,require('../middlewares/authenticate'));// Configuring the app
cov_pgq2zv7dw.s[6]++;app.use('/api',apiRoutes);cov_pgq2zv7dw.s[7]++;apiRoutes.use(authenticate);// all routes starting from /api will require authentication
// GET /api route: Returns the user object after decoding information from JWT
cov_pgq2zv7dw.s[8]++;apiRoutes.get('/',(req,res)=>{cov_pgq2zv7dw.f[0]++;cov_pgq2zv7dw.s[9]++;res.status(200).json(req.decoded);});// POST /api/apply_json_patch route
cov_pgq2zv7dw.s[10]++;apiRoutes.post('/apply_json_patch',(req,res)=>{cov_pgq2zv7dw.f[1]++;const myObj=(cov_pgq2zv7dw.s[11]++,req.body.obj);const myPatch=(cov_pgq2zv7dw.s[12]++,req.body.patch);cov_pgq2zv7dw.s[13]++;if((cov_pgq2zv7dw.b[1][0]++,myObj)&&(cov_pgq2zv7dw.b[1][1]++,myPatch)){cov_pgq2zv7dw.b[0][0]++;// both the inputs are provided.
// safe to apply the patch.
let result=(cov_pgq2zv7dw.s[14]++,jsonpatch.apply(myObj,myPatch));cov_pgq2zv7dw.s[15]++;res.status(200).json(result);// jsonpatch.apply automatically handles the incorrect json patch arrays passed as input
}else{cov_pgq2zv7dw.b[0][1]++;cov_pgq2zv7dw.s[16]++;res.status(400).json({success:false,message:'Please pass the JSON object and JSON patch array.'});}});// POST /api/create_thumbnail route
cov_pgq2zv7dw.s[17]++;apiRoutes.post('/create_thumbnail',(req,res)=>{cov_pgq2zv7dw.f[2]++;const imageUrl=(cov_pgq2zv7dw.s[18]++,req.body.imageUrl);cov_pgq2zv7dw.s[19]++;if(imageUrl){cov_pgq2zv7dw.b[2][0]++;cov_pgq2zv7dw.s[20]++;// parameter is present
Jimp.read(imageUrl,(err,image)=>{cov_pgq2zv7dw.f[3]++;cov_pgq2zv7dw.s[21]++;if((cov_pgq2zv7dw.b[4][0]++,err)||(cov_pgq2zv7dw.b[4][1]++,!image)){cov_pgq2zv7dw.b[3][0]++;cov_pgq2zv7dw.s[22]++;res.status(500).json({success:false,message:'Unable to read the image from the url.'});}else{cov_pgq2zv7dw.b[3][1]++;cov_pgq2zv7dw.s[23]++;image.resize(50,50).getBase64(Jimp.AUTO,(error,img)=>{cov_pgq2zv7dw.f[4]++;cov_pgq2zv7dw.s[24]++;res.status(200).send(`<img src='${img}'>`);});}});}else{cov_pgq2zv7dw.b[2][1]++;cov_pgq2zv7dw.s[25]++;res.status(400).json({success:false,message:'Please pass the imageUrl in the form.'});}});cov_pgq2zv7dw.s[26]++;module.exports=app;