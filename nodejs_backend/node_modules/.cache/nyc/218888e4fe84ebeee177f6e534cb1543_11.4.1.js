/* global module */'use strict';// Including the packages
var cov_10nzq300io=function(){var path='/home/tarang/Node Task/social-cops-challenge/routes/public.js',hash='b2cf2bb176f3d56e024db2a0938a783144bcd33b',global=new Function('return this')(),gcv='__coverage__',coverageData={path:'/home/tarang/Node Task/social-cops-challenge/routes/public.js',statementMap:{'0':{start:{line:5,column:16},end:{line:5,column:34}},'1':{start:{line:6,column:10},end:{line:6,column:19}},'2':{start:{line:7,column:12},end:{line:7,column:35}},'3':{start:{line:10,column:15},end:{line:10,column:35}},'4':{start:{line:13,column:11},end:{line:13,column:22}},'5':{start:{line:14,column:0},end:{line:14,column:35}},'6':{start:{line:17,column:0},end:{line:19,column:3}},'7':{start:{line:18,column:2},end:{line:18,column:269}},'8':{start:{line:22,column:0},end:{line:49,column:3}},'9':{start:{line:24,column:17},end:{line:24,column:34}},'10':{start:{line:25,column:17},end:{line:25,column:34}},'11':{start:{line:27,column:2},end:{line:48,column:3}},'12':{start:{line:29,column:20},end:{line:34,column:5}},'13':{start:{line:36,column:16},end:{line:38,column:6}},'14':{start:{line:39,column:4},end:{line:42,column:7}},'15':{start:{line:44,column:4},end:{line:47,column:7}},'16':{start:{line:51,column:0},end:{line:51,column:21}}},fnMap:{'0':{name:'(anonymous_0)',decl:{start:{line:17,column:13},end:{line:17,column:14}},loc:{start:{line:17,column:27},end:{line:19,column:1}},line:17},'1':{name:'(anonymous_1)',decl:{start:{line:22,column:19},end:{line:22,column:20}},loc:{start:{line:22,column:33},end:{line:49,column:1}},line:22}},branchMap:{'0':{loc:{start:{line:27,column:2},end:{line:48,column:3}},type:'if',locations:[{start:{line:27,column:2},end:{line:48,column:3}},{start:{line:27,column:2},end:{line:48,column:3}}],line:27},'1':{loc:{start:{line:27,column:6},end:{line:27,column:26}},type:'binary-expr',locations:[{start:{line:27,column:6},end:{line:27,column:14}},{start:{line:27,column:18},end:{line:27,column:26}}],line:27}},s:{'0':0,'1':0,'2':0,'3':0,'4':0,'5':0,'6':0,'7':0,'8':0,'9':0,'10':0,'11':0,'12':0,'13':0,'14':0,'15':0,'16':0},f:{'0':0,'1':0},b:{'0':[0,0],'1':[0,0]},_coverageSchema:'332fd63041d2c1bcb487cc26dd0d5f7d97098a6c'},coverage=global[gcv]||(global[gcv]={});if(coverage[path]&&coverage[path].hash===hash){return coverage[path];}coverageData.hash=hash;return coverage[path]=coverageData;}();const express=(cov_10nzq300io.s[0]++,require('express'));let app=(cov_10nzq300io.s[1]++,express());const jwt=(cov_10nzq300io.s[2]++,require('jsonwebtoken'));// Including the public files
const config=(cov_10nzq300io.s[3]++,require('../config'));// Configuring the app
let PORT=(cov_10nzq300io.s[4]++,config.PORT);cov_10nzq300io.s[5]++;app.set('mysecret',config.secret);// GET / route: Just for checking if the API is running or not.
cov_10nzq300io.s[6]++;app.get('/',(req,res)=>{cov_10nzq300io.f[0]++;cov_10nzq300io.s[7]++;res.status(200).send(`The API is running at http://localhost:${PORT}/api. To access it, POST a username and password to http://localhost:${PORT}/login and you will get the signed token. Pass that token to 'x-access-token' header to GET http://localhost:${PORT}/api`);});// POST /login route
cov_10nzq300io.s[8]++;app.post('/login',(req,res)=>{cov_10nzq300io.f[1]++;// TODO: use bcryptjs to hash the password
let username=(cov_10nzq300io.s[9]++,req.body.username);let password=(cov_10nzq300io.s[10]++,req.body.password);cov_10nzq300io.s[11]++;if((cov_10nzq300io.b[1][0]++,username)&&(cov_10nzq300io.b[1][1]++,password)){cov_10nzq300io.b[0][0]++;// both the parameters are present
const payload=(cov_10nzq300io.s[12]++,{user:{username,password}});// expiring the token in 10 days
let token=(cov_10nzq300io.s[13]++,jwt.sign(payload,app.get('mysecret'),{expiresIn:'10d'}));cov_10nzq300io.s[14]++;res.status(200).json({success:true,token:token});}else{cov_10nzq300io.b[0][1]++;cov_10nzq300io.s[15]++;res.status(400).json({success:false,message:'Please pass the username and password in the form.'});}});cov_10nzq300io.s[16]++;module.exports=app;