'use strict';// Packages to be used
var cov_nmujg2ovi=function(){var path='/home/tarang/Node Task/tarang/server.js',hash='3275a4930d5aa170445c0438aa5f9ecf98c854f6',global=new Function('return this')(),gcv='__coverage__',coverageData={path:'/home/tarang/Node Task/tarang/server.js',statementMap:{'0':{start:{line:3,column:16},end:{line:3,column:34}},'1':{start:{line:4,column:10},end:{line:4,column:19}},'2':{start:{line:5,column:19},end:{line:5,column:41}},'3':{start:{line:6,column:15},end:{line:6,column:32}},'4':{start:{line:11,column:15},end:{line:11,column:34}},'5':{start:{line:12,column:22},end:{line:12,column:48}},'6':{start:{line:13,column:25},end:{line:13,column:54}},'7':{start:{line:18,column:11},end:{line:18,column:22}},'8':{start:{line:19,column:0},end:{line:19,column:52}},'9':{start:{line:20,column:0},end:{line:20,column:27}},'10':{start:{line:21,column:0},end:{line:21,column:23}},'11':{start:{line:26,column:0},end:{line:26,column:23}},'12':{start:{line:27,column:0},end:{line:27,column:26}},'13':{start:{line:32,column:0},end:{line:34,column:3}},'14':{start:{line:33,column:2},end:{line:33,column:69}},'15':{start:{line:38,column:0},end:{line:38,column:25}}},fnMap:{'0':{name:'(anonymous_0)',decl:{start:{line:32,column:17},end:{line:32,column:18}},loc:{start:{line:32,column:23},end:{line:34,column:1}},line:32}},branchMap:{},s:{'0':0,'1':0,'2':0,'3':0,'4':0,'5':0,'6':0,'7':0,'8':0,'9':0,'10':0,'11':0,'12':0,'13':0,'14':0,'15':0},f:{'0':0},b:{},_coverageSchema:'332fd63041d2c1bcb487cc26dd0d5f7d97098a6c'},coverage=global[gcv]||(global[gcv]={});if(coverage[path]&&coverage[path].hash===hash){return coverage[path];}coverageData.hash=hash;return coverage[path]=coverageData;}();const express=(cov_nmujg2ovi.s[0]++,require('express'));let app=(cov_nmujg2ovi.s[1]++,express());const bodyParser=(cov_nmujg2ovi.s[2]++,require('body-parser'));const morgan=(cov_nmujg2ovi.s[3]++,require('morgan'));// Local files
const config=(cov_nmujg2ovi.s[4]++,require('./config'));const public_routes=(cov_nmujg2ovi.s[5]++,require('./routes/public'));const protected_routes=(cov_nmujg2ovi.s[6]++,require('./routes/protected'));// Using the configurations
let PORT=(cov_nmujg2ovi.s[7]++,config.PORT);cov_nmujg2ovi.s[8]++;app.use(bodyParser.urlencoded({extended:false}));cov_nmujg2ovi.s[9]++;app.use(bodyParser.json());cov_nmujg2ovi.s[10]++;app.use(morgan('dev'));// Routes are set up
cov_nmujg2ovi.s[11]++;app.use(public_routes);cov_nmujg2ovi.s[12]++;app.use(protected_routes);// Listening on the port
cov_nmujg2ovi.s[13]++;app.listen(PORT,()=>{cov_nmujg2ovi.f[0]++;cov_nmujg2ovi.s[14]++;console.log(`The application is up and running in PORT : ${PORT}`);});//App is ready for consumption
cov_nmujg2ovi.s[15]++;module.exports={app};