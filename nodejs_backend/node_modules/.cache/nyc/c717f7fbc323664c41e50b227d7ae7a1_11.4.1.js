/* global module */'use strict';// Including the packages.
var cov_25mqa7ftay=function(){var path='/home/tarang/Node Task/social-cops-challenge/middlewares/authenticate.js',hash='0c0a7cac41e34478d7fcf24b8846148419649453',global=new Function('return this')(),gcv='__coverage__',coverageData={path:'/home/tarang/Node Task/social-cops-challenge/middlewares/authenticate.js',statementMap:{'0':{start:{line:5,column:16},end:{line:5,column:34}},'1':{start:{line:6,column:10},end:{line:6,column:19}},'2':{start:{line:7,column:12},end:{line:7,column:35}},'3':{start:{line:10,column:15},end:{line:10,column:35}},'4':{start:{line:11,column:0},end:{line:11,column:35}},'5':{start:{line:14,column:0},end:{line:39,column:2}},'6':{start:{line:16,column:16},end:{line:16,column:73}},'7':{start:{line:18,column:2},end:{line:38,column:3}},'8':{start:{line:20,column:4},end:{line:31,column:7}},'9':{start:{line:21,column:6},end:{line:30,column:7}},'10':{start:{line:22,column:8},end:{line:25,column:11}},'11':{start:{line:28,column:8},end:{line:28,column:30}},'12':{start:{line:29,column:8},end:{line:29,column:15}},'13':{start:{line:34,column:4},end:{line:37,column:7}}},fnMap:{'0':{name:'(anonymous_0)',decl:{start:{line:14,column:17},end:{line:14,column:18}},loc:{start:{line:14,column:37},end:{line:39,column:1}},line:14},'1':{name:'(anonymous_1)',decl:{start:{line:20,column:43},end:{line:20,column:44}},loc:{start:{line:20,column:61},end:{line:31,column:5}},line:20}},branchMap:{'0':{loc:{start:{line:16,column:16},end:{line:16,column:73}},type:'binary-expr',locations:[{start:{line:16,column:16},end:{line:16,column:30}},{start:{line:16,column:34},end:{line:16,column:49}},{start:{line:16,column:53},end:{line:16,column:73}}],line:16},'1':{loc:{start:{line:18,column:2},end:{line:38,column:3}},type:'if',locations:[{start:{line:18,column:2},end:{line:38,column:3}},{start:{line:18,column:2},end:{line:38,column:3}}],line:18},'2':{loc:{start:{line:21,column:6},end:{line:30,column:7}},type:'if',locations:[{start:{line:21,column:6},end:{line:30,column:7}},{start:{line:21,column:6},end:{line:30,column:7}}],line:21}},s:{'0':0,'1':0,'2':0,'3':0,'4':0,'5':0,'6':0,'7':0,'8':0,'9':0,'10':0,'11':0,'12':0,'13':0},f:{'0':0,'1':0},b:{'0':[0,0,0],'1':[0,0],'2':[0,0]},_coverageSchema:'332fd63041d2c1bcb487cc26dd0d5f7d97098a6c'},coverage=global[gcv]||(global[gcv]={});if(coverage[path]&&coverage[path].hash===hash){return coverage[path];}coverageData.hash=hash;return coverage[path]=coverageData;}();const express=(cov_25mqa7ftay.s[0]++,require('express'));let app=(cov_25mqa7ftay.s[1]++,express());const jwt=(cov_25mqa7ftay.s[2]++,require('jsonwebtoken'));// Including the local files.
const config=(cov_25mqa7ftay.s[3]++,require('../config'));cov_25mqa7ftay.s[4]++;app.set('mysecret',config.secret);// The middleware function for authentication.
cov_25mqa7ftay.s[5]++;module.exports=(req,res,next)=>{cov_25mqa7ftay.f[0]++;// check header, or url parameter, or post parameter
const token=(cov_25mqa7ftay.s[6]++,(cov_25mqa7ftay.b[0][0]++,req.body.token)||(cov_25mqa7ftay.b[0][1]++,req.query.token)||(cov_25mqa7ftay.b[0][2]++,req.headers['token']));// decode token
cov_25mqa7ftay.s[7]++;if(token){cov_25mqa7ftay.b[1][0]++;cov_25mqa7ftay.s[8]++;// verifies secret and checks expiry
jwt.verify(token,app.get('mysecret'),(err,decoded)=>{cov_25mqa7ftay.f[1]++;cov_25mqa7ftay.s[9]++;if(err){cov_25mqa7ftay.b[2][0]++;cov_25mqa7ftay.s[10]++;return res.status(403).json({success:false,message:'Incorrect Token. Authenticaion Failed.'});}else{cov_25mqa7ftay.b[2][1]++;cov_25mqa7ftay.s[11]++;// if things are good, save the dedoded in the req object and call next()
req.decoded=decoded;cov_25mqa7ftay.s[12]++;next();}});}else{cov_25mqa7ftay.b[1][1]++;cov_25mqa7ftay.s[13]++;// if there is no token
return res.status(400).send({success:false,message:'No token provided.'});}};